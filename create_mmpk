import sys
import traceback
import arcpy
import time
# from SendLogEmail import SendFileAsMail

# Constants
WKID = 3414
INITIAL_RETRY_DELAY = 5  # Initial delay of 5 seconds
MAX_RETRIES = 5  # Maximum number of retries

sys.path.append("C:\\Users\\Administrator\\AppData\\Local\\Programs\\ArcGIS\\Pro\\bin\\Python\\Lib\\site-packages")

def check_sde_connection(sde_path):
    try:
        arcpy.env.workspace = sde_path # type: ignore
        fds = arcpy.ListFeatureDatasets()  # type: ignore # Try listing feature datasets
        if fds is not None:  # If the list is not empty or None, connection likely succeeded
            return True
        else:
            print("Unable to connect to SDE or SDE is empty.")
            return False
    except Exception as e:
        print(f"Error while connecting to SDE: {e}")
        return False

def create_mmpk(argv):
    script, jobID, bufferSize, outputFolder, project, workspace, gdbPath, layerFolderPath, jobLayer = argv

    x, y = (0, 1)
    aprx = arcpy.mp.ArcGISProject(project)

    arcpy.env.workspace = workspace # type: ignore
    fdlist = arcpy.da.SearchCursor(jobLayer, ["SHAPE@XY"], '"AMS_ID" = \'{0}\''.format(jobID)) # type: ignore
    for row in fdlist:
        x, y = row[0]

    esri_json = {
        "x": x,
        "y": y,
        "spatialReference": {
            "wkid": WKID
        }
    }

    point = arcpy.AsShape(esri_json, True)
    buffer = point.buffer(int(bufferSize)) # type: ignore
    dest_map = aprx.listMaps("Layers")[0] # type: ignore

    arcpy.management.CreateMobileMapPackage(dest_map,  # type: ignore
                                            outputFolder + jobID + ".mmpk", 
                                            None,
                                            buffer, "DEFAULT", "CLIP", "Title", 
                                            "Summary", "description", "Tag", 
                                            "Credit information", "Usage Limitation")

def main():
    try:
        # Check SDE connection first
        if not check_sde_connection(workspace=sys.argv[5]): # type: ignore
            raise Exception("Failed to connect to SDE. Exiting script.")
        
        for i in range(MAX_RETRIES):
            try:
                create_mmpk(sys.argv)
                break
            except IOError:  # Assuming IOError represents a network error; adjust as needed
                if i == MAX_RETRIES - 1:
                    raise
                delay = INITIAL_RETRY_DELAY * (2 ** i)
                print(f"Retrying in {delay} seconds due to network issue...")
                time.sleep(delay)
            except Exception as e:
                print(f"Error: {e}")
                break
    except Exception as ex:
         # SendFileAsMail(sys.argv, traceback.format_exc())
        raise


if __name__ == "__main__":
    main()
